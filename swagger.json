{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Server-connected vehicles",
    "description": "This project serves multiple categories of users: users owning electrical vehicles, dashboard admins and agencies giving different services to the vehicle owners. \n\n Car owners use multiple services provided by mobile application and HMI. \n\n Admins manage both agencies and car owners through a web application. \n\n Agencies, provide both online and in person services to car owners"
  },
  "tags":[
    {
      "name": "agencies",
      "description": " APIs include:\n\n - activities which admins do for agencies managment\n\n - Online services provided by agencies for car owners\n\n - Activities which agencies do themselves"
    },
    {
      "name": "profile",
      "description": "Admins and agencies account managment"
    },
    {
      "name": "reserve",
      "description": "This module provides APIs so that:\n\n - Car users can reserve a timespan in an agencie to have their cars serviced by the agency\n\n - Ucers can find agencies which have free timespans in a specific date\n\n - By selecting an agency from the map, users can see free dates and times provided by the agency"
    },
    {
      "name": "softwareConfigurations",
      "description": "A module containing APIs setting and getting system configurations, such as geographical scale that is used in the map demonstrating agencies and vehicles\n\n Admin access"
    },
    {
      "name": "vehicles",
      "description": "Vehicle managment module"
    }
  ],
    
  "host": "localhost:5001",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/agency": {
      "get": {
        "tags": [
          "agencies"
        ],
        "summary": "Get all agencies",
        "parameters": [
          {
            "name": "Authorization",
            "in": "params",
            "description": "user access-token"
          }
        ],
        "responses": {
          "200": {
            "status": "Success"
          },
          "400": {
            "status": "fail"
          }
        }
      },
      "post": {
        "tags": [
          "agencies"
        ],
        "summary": "Insert or update an agency",
        "parameters": [
          {
            "name": "action",
            "in": "body",
            "description": "Should have the value 'insert' or 'update'"
          },
          {
            "name": "uniqueId",
            "in": "body",
            "description": ""
          },
          {
            "name": "code",
            "in": "body",
            "description": ""
          },
          {
            "name": "name",
            "in": "body",
            "description": ""
          },
          {
            "name": "address",
            "in": "body",
            "description": "",
            "schema":{
              "type": "object",
              "properties": {
                "city": {
                  "type": "string"
                },
                "province": {
                  "type": "string"
                },
                "address1": {
                  "type": "string"
                },
                "coordinate": {
                  "type": "object",
                  "properties":{
                    "lat": {
                      "type": "string"
                    },
                    "lon": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "phone",
            "in": "body",
            "description": ""
          },
          {
            "name": "services",
            "in": "body",
            "description": "An array of services provided by the agency"
          },
          {
            "name": "vehicles",
            "in": "body",
            "description": "An array of vehicles assigned to the agency"
          },
          {
            "name": "status",
            "in": "body",
            "description": "If the agency is active or not"
          },
          {
            "name": "manager",
            "in": "body",
            "description": "",
            "schema": {
              "type":"object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "status": "Success"
          },
          "400": {
            "status": "fail"
          }
        }
      }
    },
    "/api/agency/customized": {
      "get": {
        "tags": [
          "agencies"
        ],
        "summary": "Get all agencies save in the DB in a customized format",
        "responses": {
          "200": {
            "status": "Success"
          },
          "400": {
            "status": "fail"
          }
        }
      }
    },
    "/api/agency/{id}": {
      "get": {
        "tags": [
          "agencies"
        ],
        "summary": "Provided id, get an agency",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "agency id"
          }
        ],
        "responses": {
          "200": {
            "status": "Success"
          },
          "400": {
            "status": "fail"
          }
        }
      },
      "delete": {
        "tags": [
          "agencies"
        ],
        "summary": "Provided an id, delete the agency",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "agency id"
          }
        ],
        "responses": {
          "200": {
            "status": "Success"
          },
          "400": {
            "status": "fail"
          }
        }
      }
    },
    "/api/agency/{lat}/{lon}/getNearest": {
      "get": {
        "tags": [
          "agencies"
        ],
        "summary": "Providing geographic coordinate(illustrating vehicle's location) get the nearest agency. \n\n Using Mapbox APIs",
        "parameters": [
          {
            "name": "lat",
            "in": "path",
            "description": "latitude"
          },
          {
            "name": "lon",
            "in": "path",
            "description": "longitude"
          }
        ],
        "responses": {
          "200": {
            "status": "Success"
          },
          "400": {
            "status": "fail"
          }
        }
      }
    },
    "/api/agency/setUserPassword": {
      "post": {
        "tags": [
          "agencies"
        ],
        "summary": "Admin sets username and password for the agency",
        "parameters": [
          {
            "name": "uniqueId",
            "in": "body",
            "description": ""
          },
          {
            "name": "username",
            "in": "body",
            "description": ""
          },
          {
            "name": "password",
            "in": "body",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "status": "Success"
          },
          "400": {
            "status": "fail"
          },
          "401": {
            "status": "unauthorized"
          }
        }
      }
    },
    "/api/agency/vehicles": {
      "post": {
        "tags": [
          "agencies"
        ],
        "summary": "Admin assigns vehicles to an agency",
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "description": "agency id"
          },
          {
            "name": "vehiclesIdsList",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "array of ids implying vehicles"
          }
        ],
        "responses": {
          "200": {
            "status": "Success"
          },
          "400": {
            "status": "fail"
          },
          "401": {
            "status": "unauthorized"
          }
        }
      }
    },
    "/api/agency/{id}/vehicles": {
      "post": {
        "tags": [
          "agencies"
        ],
        "summary": "Get vehicles assigned to an agency, filtering as available. You can filter based on any field of the vehicle document",
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "description": "agency id"
          },
          {
            "name": "filters",
            "in": "body",
            "schema": {
              "type": "object"
            },
            "description": "Can be ay field of the vehicle document"
          }
        ],
        "responses": {
          "200": {
            "status": "Success"
          },
          "400": {
            "status": "fail"
          },
          "401": {
            "status": "unauthorized"
          }
        }
      }
    },
    "/api/agency/pieces": {
      "post": {
        "tags": [
          "agencies"
        ],
        "summary": "Get vehicles assigned to an agency, with filters. You can filter based on any field of the vehicle document",
        "parameters": [
          {
            "name": "Authorization",
            "in": "params",
            "description": "agency token"
          },
          {
            "name": "name",
            "in": "body",
            "description": "*"
          },
          {
            "name": "category",
            "in": "body",
            "description": "A pre-defined static list of vehicle categories"
          },
          {
            "name": "partNumber",
            "in": "body",
            "description": ""
          },
          {
            "name": "manufacturer",
            "in": "body",
            "description": ""
          },
          {
            "name": "description",
            "in": "body",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "status": "Success"
          },
          "400": {
            "status": "fail"
          },
          "401": {
            "status": "unauthorized"
          }
        }
      }
    },
    "/api/profile": {
      "post": {
        "tags": [
          "profile"
        ],
        "summary": "handles admins login. Using axios calls an api from authentication service\n\n to authenticate the admin(userAdmins schema) and recieves an access-token",
        "parameters": [
          {
            "name": "username",
            "in": "body",
            "description": ""
          },
          {
            "name": "password",
            "in": "body",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "status": "Success"
          },
          "400": {
            "status": "fail"
          },
          "401": {
            "status": "unauthorized"
          }
        }
      }
    },
    "/api/reserve": {
      "post": {
        "tags": [
          "reserve"
        ],
        "summary": "reserve an agency",
        "parameters": [
          {
            "name": "agencyUniqueId",
            "in": "body",
            "description": ""
          },
          {
            "name": "profilePhone",
            "in": "body",
            "description": ""
          },
          {
            "name": "reservedDate",
            "in": "body",
            "description": "The current time that the user is reserving"
          },
          {
            "name": "doReserveDate",
            "in": "body",
            "schema": {
              "type": "object",
              "parameters": {
                "year": {
                  "type": "integer"
                },
                "month": {
                  "type": "integer"
                },
                "day": {
                  "type": "integer"
                },
                "timeSection": {
                  "type": "integer"
                }
              }
            },
            "description": "The time that the user wants to reserve"
          },
          {
            "name": "demandedServices",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The services that the customer needs"
          }
        ],
        "responses": {
          "200": {
            "status": "Success"
          },
          "400": {
            "status": "fail"
          },
          "401": {
            "status": "unauthorized"
          }
        }
      }
    },
    "/api/reserve/freeTimes": {
      "post": {
        "tags": [
          "reserve"
        ],
        "summary": "The vehicle owner chooses a date from the calendar, then 3 nearest agencies that have free timespans at the selected date will be returned",
        "parameters": [
          {
            "name": "year",
            "in": "body",
            "description": ""
          },
          {
            "name": "month",
            "in": "body",
            "description": ""
          },
          {
            "name": "day",
            "in": "body",
            "description": ""
          },
          {
            "name": "lat",
            "in": "body",
            "description": "current coordinate latitude"
          },
          {
            "name": "lon",
            "in": "body",
            "description": "current coordinate longitude"
          }
        ],
        "responses": {
          "200": {
            "status": "Success"
          },
          "400": {
            "status": "fail"
          },
          "401": {
            "status": "unauthorized"
          }
        }
      }
    },
    "/api/reserve/freeTimes/agency": {
      "post": {
        "tags": [
          "reserve"
        ],
        "summary": "Vehicle owner chooses the agency from the map and the date from the calendar, then the timespans during which the selected agency is free will be returned",
        "parameters": [
          {
            "name": "agencyUniqueId",
            "in": "body",
            "description": ""
          },
          {
            "name": "year",
            "in": "body",
            "description": ""
          },
          {
            "name": "month",
            "in": "body",
            "description": ""
          },
          {
            "name": "day",
            "in": "body",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "status": "Success"
          },
          "400": {
            "status": "fail"
          },
          "401": {
            "status": "unauthorized"
          }
        }
      }
    },
    "/api/reserve/logs": {
      "post": {
        "tags": [
          "reserve"
        ],
        "summary": "A history of users reserves, both done and waiting reserves",
        "parameters": [
          {
            "name": "Authorization",
            "in": "params",
            "description": "user token"
          },
          {
            "name": "filters",
            "in": "body",
            "schema": {
              "type": "object"
            },
            "description": "Any fields of the reserve document"
          }
        ],
        "responses": {
          "200": {
            "status": "Success"
          },
          "400": {
            "status": "fail"
          },
          "401": {
            "status": "unauthorized"
          }
        }
      }
    },
    "/api/config": {
      "post": {
        "tags": [
          "softwareConfigurations"
        ],
        "summary": " update software configurations",
        "parameters": [
          {
            "name": "geographic_scale",
            "in": "body",
            "description": "This number illustrates the geographic radius(in kilometers) through which the agencies should be visible on the map."
          }
        ],
        "responses": {
          "200": {
            "status": "Success"
          },
          "400": {
            "status": "fail"
          },
          "401": {
            "status": "unauthorized"
          }
        }
      },
      "get": {
        "tags": [
          "softwareConfigurations"
        ],
        "summary": " get software configurations",
        "responses": {
          "200": {
            "status": "Success"
          },
          "400": {
            "status": "fail"
          },
          "401": {
            "status": "unauthorized"
          }
        }
      }
    },
    "/api/vehicle": {
      "post": {
        "tags": [
          "vehicles"
        ],
        "summary": " insert or update vehicles - Admin access",
        "parameters": [
          {
            "name": "type",
            "in": "body",
            "description": ""
          },
          {
            "name": "system",
            "in": "body",
            "description": ""
          },
          {
            "name": "model",
            "in": "body",
            "description": ""
          },
          {
            "name": "capacity",
            "in": "body",
            "description": ""
          },
          {
            "name": "charger",
            "in": "body",
            "description": ""
          },
          {
            "name": "color",
            "in": "body",
            "description": ""
          },
          {
            "name": "engine",
            "in": "body",
            "description": ""
          },
          {
            "name": "engine-type",
            "in": "body",
            "description": ""
          },
          {
            "name": "VIN",
            "in": "body",
            "description": ""
          },
          {
            "name": "profileId",
            "in": "body",
            "description": ""
          },
          {
            "name": "car_tag",
            "in": "body",
            "description": ""
          },
          {
            "name": "agency",
            "in": "body",
            "description": ""
          },
          {
            "name": "coordinate",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "lat": {
                  "type":"string"
                },
                "lon": {
                  "type":"string"
                }
              }
            },
            "description": "*"
          }
        ],
        "responses": {
          "200": {
            "status": "Success"
          },
          "400": {
            "status": "fail"
          },
          "401": {
            "status": "unauthorized"
          }
        }
      },
      "get": {
        "tags": [
          "vehicles"
        ],
        "summary": " get all vehicles - Admin access",
        "responses": {
          "200": {
            "status": "Success"
          },
          "400": {
            "status": "fail"
          },
          "401": {
            "status": "unauthorized"
          }
        }
      }
    },
    "/api/vehicle/{id}": {
      "get": {
        "tags": [
          "vehicles"
        ],
        "summary": " given a vehicle id, returns the vehicle document - Admin access",
        "parameters": {
            "name": "id",
            "in": "path",
            "description": ""
        },
        "responses": {
          "200": {
            "status": "Success"
          },
          "400": {
            "status": "fail"
          },
          "401": {
            "status": "unauthorized"
          }
        }
      }
    }
  }
}